- 大致概念：[80%-sure] 以 Rust 为例，运行到 func().await 时 (func 为 async fn)
    - func() 内部代码完全交由 async runtime 处理
    - func() 内部通常有等待IO/GPU/定时器的异步部分。**这些部分不应该让 CPU 干等着，所以才写成异步函数.**
    - 如果 func() 内部全是同步代码，没有 .await 或手动挂起点，写成异步（async fn）没有实际意义
        - 它是不会挂起的，会同步执行完毕。

- 轮询
    - poll 调用次数不是固定的，取决于任务的完成时机和外部事件。
